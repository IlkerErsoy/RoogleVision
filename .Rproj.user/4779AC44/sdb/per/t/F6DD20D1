{
    "collab_server" : "",
    "contents" : "\n\n## please see flovv.github.com for a short blog post on running the code.\n\n#devtools::install_github(\"MarkEdmondson1234/googleAuthR\")\n\nrequire(googleAuthR)\nrequire(RCurl)\n\n### plug in your credentials\n## create project- enable billing- -- enable APIs Vision APi -- go to credentials create OAuth 2.0 client ID: copy client_id and client_secret from JSON file.\noptions(\"googleAuthR.client_id\" = \"xxx.apps.googleusercontent.com\")\noptions(\"googleAuthR.client_secret\" = \"\")\n\n### define scope!\noptions(\"googleAuthR.scopes.selected\" = c(\"https://www.googleapis.com/auth/cloud-platform\"))\n\n\n### use fantastic package!\ngoogleAuthR::gar_auth()\n\n################################# FACE DETECTION EXAMPLE\n### encode image\nimageFile <- \"arnold_wife.jpg\"\ntxt <- base64Encode(readBin(imageFile, \"raw\", file.info(imageFile)[1, \"size\"]), \"txt\")\n### create Request, following the API Docs.\nbody= paste0('{  \"requests\": [    {   \"image\": { \"content\": \"',txt,'\" }, \"features\": [  { \"type\": \"FACE_DETECTION\", \"maxResults\": 2} ],  }    ],}')\n## generate function call\nsimpleCall <- gar_api_generator(baseURI = \"https://vision.googleapis.com/v1/images:annotate\", http_header=\"POST\" )\n## set the request!\npp <- simpleCall(the_body = body)\n## obtain results.\npp$content$responses$faceAnnotations[[1]]\n\n################################################################################\n######################################## LOGO DETECTION EXAMPLE\n\nimageFile <- \"brandlogos.png\"\ntxt <- base64Encode(readBin(imageFile, \"raw\", file.info(imageFile)[1, \"size\"]), \"txt\")\n\n### create Request, following the API Docs.\nbody= paste0('{  \"requests\": [    {   \"image\": { \"content\": \"',txt,'\" }, \"features\": [  { \"type\": \"LOGO_DETECTION\", \"maxResults\": 40} ],  }    ],}')\n\n## generate function call\nsimpleCall <- gar_api_generator(baseURI = \"https://vision.googleapis.com/v1/images:annotate\", http_header=\"POST\" )\n\n## set the request!\npp <- simpleCall(the_body = body)\nlogos <- pp$content$responses$logoAnnotations[[1]]\n\ns <- pp$content$responses\n##################################################################################\n######################################## OCR EXAMPLE\nimageFile <- \"brandlogos.png\"\ntxt <- base64Encode(readBin(imageFile, \"raw\", file.info(imageFile)[1, \"size\"]), \"txt\")\n\n### create Request, following the API Docs.\nbody= paste0('{  \"requests\": [    {   \"image\": { \"content\": \"',txt,'\" }, \"features\": [  { \"type\": \"TYPE_UNSPECIFIED\"} ],  }    ],}')\n\n## generate function call\nsimpleCall <- gar_api_generator(baseURI = \"https://vision.googleapis.com/v1/images:annotate\", http_header=\"POST\" )\n\n## set the request!\npp <- simpleCall(the_body = body)\nst <- pp$content$responses$\nst$boundingPoly\n####################################################################################\n",
    "created" : 1463386671246.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "294705522",
    "id" : "F6DD20D1",
    "lastKnownWriteTime" : 1463328249,
    "last_content_update" : 1463328249,
    "path" : "C:/Users/fteschner/Desktop/googleVision/GoogleVisionGist.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}